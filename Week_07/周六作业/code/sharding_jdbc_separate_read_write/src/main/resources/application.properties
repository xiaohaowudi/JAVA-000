
# 读写分离配置文件

# 水平分库，两个数据源
spring.shardingsphere.datasource.names=m0,s0

# 一个实体类对应多个表，允许覆盖
spring.main.allow-bean-definition-overriding=true

# 主数据源
spring.shardingsphere.datasource.m0.url=jdbc:mysql://192.168.3.144:3306/order_info?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m0.username=root
spring.shardingsphere.datasource.m0.password=123456

# 从数据源
spring.shardingsphere.datasource.s0.url=jdbc:mysql://192.168.3.145:3306/order_info?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.s0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.s0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.s0.username=root
spring.shardingsphere.datasource.s0.password=123456

# 主从共同构成逻辑数据源ds0, 一主一从
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=m0
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=s0

# 指定user_db库里面t_user表专库专用
spring.shardingsphere.sharding.tables.OrderBaseInfo.actual-data-nodes=ds$->{0}.OrderBaseInfo

# 指定主键生成策略
spring.shardingsphere.sharding.tables.OrderBaseInfo.key-generator.column=order_id
spring.shardingsphere.sharding.tables.OrderBaseInfo.key-generator.type=SNOWFLAKE

# 打开日志
spring.shardingsphere.props.sql.show=true

